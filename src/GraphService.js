var graph = require('@microsoft/microsoft-graph-client');

function getAuthenticatedClient(accessToken) {
    // Initialize Graph client
    const client = graph.Client.init({
        // Use the provided access token to authenticate
        // requests
        authProvider: (done) => {
            done(null, accessToken.accessToken);
        }
    });

    return client;
}

// Getting the user's information 
export async function getUserDetails(accessToken) {
    const client = getAuthenticatedClient(accessToken);

    const user = await client.api('/me').get();
    return user;
}


// Setting current date 
var today = new Date();
var dd = String(today.getDate()).padStart(2, '0');
var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
var yyyy = today.getFullYear();
today = yyyy + '-' + mm + '-' + dd; // Getting current date


// Getting calendar information 
export async function getEvents(accessToken) {
    const client = getAuthenticatedClient(accessToken);

    const events = await client
        .api('/me/calendarView?startDateTime=' + today + 'T01:00:00.0000000&endDateTime=' + today + 'T19:00:00.0000000')
        .select('organizer,start,end')
        .header('Prefer', 'outlook.timezone="pacific standard time"')
        .orderby('start/dateTime asc')
        .get();
    return events;
}

// Getting list of calendars to be able to select from 
export async function getCalendars(accessToken) {
    const client = getAuthenticatedClient(accessToken);

    const scheduleInformation = {
        schedules: [ "alpha@adaptivebiotech.com"],
        startTime: {
            dateTime: today + "T09:00:00",
            timeZone: "Pacific Standard Time"
        },
        endTime: {
            dateTime: today + "T18:00:00",
            timeZone: "Pacific Standard Time"
        },
        availabilityViewInterval: 100
    };

    const calendarx = await client
        .api('/me/calendar/getSchedule')
        .header('Prefer', 'outlook.timezone="pacific standard time"')        
    .post(scheduleInformation);

    return calendarx;
}


// // Attempting to send email from graph api 
// export async function postEmail(accessToken) {
//     const client = getAuthenticatedClient(accessToken);


//     const message = {
//         subject:"{Room Name}: + Forgot your meeting?",
//         importance:"Low",
//         body:{
//             contentType:"HTML",
//             content:"Reminder that you have the conference room {Room Name} Reserved from {Start}  till {End} but you never checked in. I am a bot this message was auto generated by Room Avail."
//         },
//         toRecipients:[
//             {
//                 emailAddress:{
//                     address:"zrobin@adaptivebiotech.com"
//                 }
//             }
//         ]
//     };
//     let res = await client
//         .api('/me/message')
//         .post(message);
// }